import { GetStaticPaths, GetStaticProps } from 'next';
import SinglePost from '@/components/Post/SinglePost';
import {
  getAllPosts,
  getPostsForTopPage,
  getPostsByPage,
  getNumberOfPages,
} from './../../lib/notionAPI';
import Head from 'next/head';
import Pagenation from '@/components/Pagenation/Pagenation';

export const getStaticPaths: any = async () => {
  const numberOfPages = await getNumberOfPages();

  let params = [];
  for (let i = 1; i <= numberOfPages; i++) {
    params.push({ params: { page: i.toString() } });
    return {
      paths: params,
      fallback: 'blocking',
    };
  }
};

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage:any = context.params?.page;
  const postsByPage = await getPostsByPage(
    parseInt(currentPage.toString(), 10)
  );

  const numberOfPage = await getNumberOfPages();

  return {
    props: {
      postsByPage,
      numberOfPage,
    },
    revalidate: 60,
  };
};

const BlogPageList = ({ postsByPage, numberOfPage }:any) => {
  return (
    <div className='container mx-auto h-full w-full'>
      <Head>
        <title>Notion-Blog</title>
        <meta name='description' content='Generated by create nextapp' />
        <link rel='icon' href='/favicon.icon' />
      </Head>

      <main className='w-ful container mt-16'>
        <h1 className='mb-16 text-center text-5xl font-medium'>
          Notion BlogðŸš€
        </h1>
        <section className=' sm:grid  grid-cols-2 w:5/6 gap-4 mx-auto'>
          {postsByPage.map((post:any) => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPaginationPage={true}
              />
            </div>
          ))}
        </section>
        <Pagenation numberOfPage={numberOfPage} />
      </main>
    </div>
  );
};

export default BlogPageList;
